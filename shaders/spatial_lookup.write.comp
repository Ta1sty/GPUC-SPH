#version 450

layout (local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

#define GRID_WRITEABLE
#define GRID_PCR
#include "spatial_lookup.glsl"

void fillIndex(uint index) {
	if (index < GRID_NUM_ELEMENTS)
	{
		VEC_T position = dequantize_position(quantize_position(particle_coordinates[index]));
		IVEC_T cell = cellCoord(position);

		SpatialCacheEntry entry;
		entry.cellKey = cellKey(cell);
		entry.cellClass = cellClass(cell);

		spatial_cache[index] = entry;
		spatial_lookup[index] = SpatialLookupEntry(quanitize(index, entry.cellClass, position));
	} else {
		spatial_cache[index] = SpatialCacheEntry(-1, -1);
		spatial_lookup[index] = SpatialLookupEntry(quanitize(uint(-1), uint(-1), SWIZZLE(vec3(0))));
	}
	spatial_indices[index] = SpatialIndexEntry(uint(-1), uint(-1));
}

void main() {
	uint index = gl_WorkGroupID.x * gl_WorkGroupSize.x * 2 + gl_LocalInvocationID.x;

	fillIndex(index);
	index += gl_WorkGroupSize.x;
	fillIndex(index);
}